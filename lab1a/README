# NAME: John Tran
# EMAIL: johntran627@gmail.com
# UID: 005183495
# SLIPDAYS: 5

I read the following man pages to find out about the arguments, return value, and
functionality of each system call

https://linux.die.net/man/3/tcgetattr
https://linux.die.net/man/3/tcsetattr
https://linux.die.net/man/2/fork
https://linux.die.net/man/2/waitpid
https://linux.die.net/man/3/exec
https://linux.die.net/man/2/pipe
http://man7.org/linux/man-pages/man3/atexit.3.html
http://man7.org/linux/man-pages/man2/kill.2.html
https://linux.die.net/man/2/poll


lab1.c:
This program is a multi-process telnet-like client and server and can be broken up into
two parts:
- Part 1: character-at-a-time, full duplex terminal I/O
- Part 2: Polled I/O and passing input and output between two processes
Thus, we can run a program with no option at all or with --shell option
The most difficult problem that I encountered when doing this lab was not knowing how to
handle file descriptors when using pipe and also how to catch the signal when the program
exits. 

Makefile:
default: create an executable for the program
clean: remove files that generated by `make` or `make dist`
dist: make a tarball to include necessary files for submission
